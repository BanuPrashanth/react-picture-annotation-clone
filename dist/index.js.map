{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/Shape.ts","../src/Transformer.ts","../src/utils/randomId.ts","../src/annotation/CreatingAnnotationState.ts","../src/annotation/DraggingAnnotationState.ts","../src/annotation/TransfromationState.ts","../src/annotation/DefaultAnnotationState.ts","../src/DeleteButton.tsx","../src/DefaultInputSection.tsx","../src/ReactPictureAnnotation.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { IAnnotation } from \"./Annotation\";\n\nexport const shapeStyle = {\n  padding: 5,\n  margin: 10,\n  fontSize: 12,\n  fontColor: \"#212529\",\n  fontBackground: \"#f8f9fa\",\n  fontFamily:\n    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\n  shapeBackground: \"hsla(210, 16%, 93%, 0.2)\",\n  shapeStrokeStyle: \"#ff0000\",\n  shapeShadowStyle: \"hsla(210, 9%, 31%, 0.35)\"\n};\n\nexport interface IShapeBase {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface IShapeAdjustBase {\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface IShapeData extends IShapeBase {\n  type: string;\n}\n\nexport interface IRectShapeData extends IShapeData {\n  type: \"RECT\";\n}\n\nexport interface IShape {\n  onDragStart: (positionX: number, positionY: number) => void;\n  onDrag: (positionX: number, positionY: number) => void;\n  checkBoundary: (positionX: number, positionY: number) => boolean;\n  paint: (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    selected: boolean\n  ) => IShapeBase;\n  getAnnotationData: () => IAnnotation;\n  adjustMark: (adjustBase: IShapeAdjustBase) => void;\n  setComment: (comment: string) => void;\n  equal: (data: IAnnotation) => boolean;\n}\n\nexport class RectShape implements IShape {\n  private annotationData: IAnnotation<IShapeData>;\n\n  private onChangeCallBack: () => void;\n\n  private dragStartOffset: { offsetX: number; offsetY: number };\n\n  constructor(data: IAnnotation<IShapeData>, onChange: () => void) {\n    this.annotationData = data;\n    this.onChangeCallBack = onChange;\n  }\n\n  public onDragStart = (positionX: number, positionY: number) => {\n    const { x, y } = this.annotationData.mark;\n    this.dragStartOffset = {\n      offsetX: positionX - x,\n      offsetY: positionY - y\n    };\n  };\n\n  public onDrag = (positionX: number, positionY: number) => {\n    this.annotationData.mark.x = positionX - this.dragStartOffset.offsetX;\n    this.annotationData.mark.y = positionY - this.dragStartOffset.offsetY;\n    this.onChangeCallBack();\n  };\n\n  public checkBoundary = (positionX: number, positionY: number) => {\n    const {\n      mark: { x, y, width, height }\n    } = this.annotationData;\n\n    if (\n      ((positionX > x && positionX < x + width) ||\n        (positionX < x && positionX > x + width)) &&\n      ((positionY > y && positionY < y + height) ||\n        (positionY < y && positionY > y + height))\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  public paint = (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    selected: boolean\n  ) => {\n    const { x, y, width, height } = calculateTruePosition(\n      this.annotationData.mark\n    );\n    canvas2D.save();\n\n    canvas2D.shadowBlur = 10;\n    canvas2D.shadowColor = shapeStyle.shapeShadowStyle;\n    canvas2D.strokeStyle = shapeStyle.shapeStrokeStyle;\n    canvas2D.lineWidth = 2;\n    canvas2D.strokeRect(x, y, width, height);\n    canvas2D.restore();\n    if (selected) {\n      canvas2D.fillStyle = shapeStyle.shapeBackground;\n      canvas2D.fillRect(x, y, width, height);\n    } else {\n      // const { comment } = this.annotationData;\n      // if (comment) {\n      //   canvas2D.font = `${shapeStyle.fontSize}px ${shapeStyle.fontFamily}`;\n      //   const metrics = canvas2D.measureText(comment);\n      //   canvas2D.save();\n      //   canvas2D.fillStyle = shapeStyle.fontBackground;\n      //   canvas2D.fillRect(\n      //     x,\n      //     y,\n      //     metrics.width + shapeStyle.padding * 2,\n      //     shapeStyle.fontSize + shapeStyle.padding * 2\n      //   );\n      //   canvas2D.textBaseline = \"top\";\n      //   canvas2D.fillStyle = shapeStyle.fontColor;\n      //   canvas2D.fillText(\n      //     comment,\n      //     x + shapeStyle.padding,\n      //     y + shapeStyle.padding\n      //   );\n      // }\n    }\n    canvas2D.restore();\n\n    return { x, y, width, height };\n  };\n\n  public adjustMark = ({\n    x = this.annotationData.mark.x,\n    y = this.annotationData.mark.y,\n    width = this.annotationData.mark.width,\n    height = this.annotationData.mark.height\n  }: {\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n  }) => {\n    this.annotationData.mark.x = x;\n    this.annotationData.mark.y = y;\n    this.annotationData.mark.width = width;\n    this.annotationData.mark.height = height;\n    this.onChangeCallBack();\n  };\n\n  public getAnnotationData = () => {\n    return this.annotationData;\n  };\n\n  public setComment = (comment: string) => {\n    this.annotationData.comment = comment;\n  };\n\n  public equal = (data: IAnnotation) => {\n    return (\n      data.id === this.annotationData.id &&\n      data.comment === this.annotationData.comment &&\n      data.mark.x === this.annotationData.mark.x &&\n      data.mark.y === this.annotationData.mark.y &&\n      data.mark.width === this.annotationData.mark.width &&\n      data.mark.height === this.annotationData.mark.height\n    );\n  };\n}\n","import { IShape, IShapeBase } from \"Shape\";\n\nconst NODE_WIDTH = 10;\n\nexport interface ITransformer {\n  checkBoundary: (positionX: number, positionY: number) => boolean;\n  startTransformation: (positionX: number, positionY: number) => void;\n  onTransformation: (positionX: number, positionY: number) => void;\n  paint: (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase\n  ) => void;\n}\n\nexport default class Transformer implements ITransformer {\n  private shape: IShape;\n  private currentNodeCenterIndex: number;\n\n  constructor(shape: IShape) {\n    this.shape = shape;\n  }\n  public checkBoundary = (positionX: number, positionY: number) => {\n    const currentCenterIndex = this.getCenterIndexByCursor(\n      positionX,\n      positionY\n    );\n    return currentCenterIndex >= 0;\n  };\n\n  public startTransformation = (positionX: number, positionY: number) => {\n    const currentCenterIndex = this.getCenterIndexByCursor(\n      positionX,\n      positionY\n    );\n    this.currentNodeCenterIndex = currentCenterIndex;\n  };\n\n  public onTransformation = (positionX: number, positionY: number) => {\n    const currentCentersTable = this.getAllCentersTable();\n    currentCentersTable[this.currentNodeCenterIndex].adjust(\n      positionX,\n      positionY\n    );\n  };\n\n  public paint = (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase\n  ) => {\n    const allCentersTable = this.getAllCentersTable();\n    canvas2D.save();\n    canvas2D.fillStyle = \"#5c7cfa\";\n\n    for (const item of allCentersTable) {\n      const { x, y, width, height } = calculateTruePosition({\n        x: item.x - NODE_WIDTH / 2,\n        y: item.y - NODE_WIDTH / 2,\n        width: NODE_WIDTH,\n        height: NODE_WIDTH\n      });\n      canvas2D.fillRect(x, y, width, height);\n    }\n\n    canvas2D.restore();\n  };\n\n  private getCenterIndexByCursor = (positionX: number, positionY: number) => {\n    const allCentersTable = this.getAllCentersTable();\n    return allCentersTable.findIndex(item =>\n      this.checkEachRectBoundary(item.x, item.y, positionX, positionY)\n    );\n  };\n\n  private checkEachRectBoundary = (\n    rectCenterX: number,\n    rectCenterY: number,\n    positionX: number,\n    positionY: number\n  ) => {\n    if (\n      Math.abs(positionX - rectCenterX) <= NODE_WIDTH / 2 &&\n      Math.abs(positionY - rectCenterY) <= NODE_WIDTH / 2\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  private getAllCentersTable = () => {\n    const { shape } = this;\n    const { x, y, width, height } = shape.getAnnotationData().mark;\n    return [\n      {\n        x,\n        y,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x: positionX,\n            y: positionY,\n            width: width + x - positionX,\n            height: height + y - positionY\n          });\n        }\n      },\n      {\n        x: x + width / 2,\n        y,\n        adjust: (_: number, positionY: number) => {\n          shape.adjustMark({\n            y: positionY,\n            height: height + y - positionY\n          });\n        }\n      },\n      {\n        x: x + width,\n        y,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x,\n            y: positionY,\n            width: positionX - x,\n            height: y + height - positionY\n          });\n        }\n      },\n      {\n        x,\n        y: y + height / 2,\n        adjust: (positionX: number) => {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX\n          });\n        }\n      },\n      {\n        x: x + width,\n        y: y + height / 2,\n        adjust: (positionX: number) => {\n          shape.adjustMark({ width: positionX - x });\n        }\n      },\n      {\n        x,\n        y: y + height,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX,\n            height: positionY - y\n          });\n        }\n      },\n      {\n        x: x + width / 2,\n        y: y + height,\n        adjust: (_: number, positionY: number) => {\n          shape.adjustMark({\n            height: positionY - y\n          });\n        }\n      },\n      {\n        x: x + width,\n        y: y + height,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            width: positionX - x,\n            height: positionY - y\n          });\n        }\n      }\n    ];\n  };\n}\n","export default (len = 6) => {\n  const chars = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\";\n  const maxPos = chars.length;\n  let id = \"\";\n  for (let i = 0; i < len; i++) {\n    id += chars.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return id;\n};\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class CreatingAnnotationState implements IAnnotationState {\n  private context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { shapes } = this.context;\n    if (shapes.length > 0) {\n      const currentShape = shapes[shapes.length - 1];\n      const {\n        mark: { x, y }\n      } = currentShape.getAnnotationData();\n      currentShape.adjustMark({\n        width: positionX - x,\n        height: positionY - y\n      });\n    }\n  };\n\n  public onMouseUp = () => {\n    const { shapes, onShapeChange, setAnnotationState } = this.context;\n    const data = shapes.pop();\n    if (\n      data &&\n      data.getAnnotationData().mark.width !== 0 &&\n      data.getAnnotationData().mark.height !== 0\n    ) {\n      shapes.push(data);\n    } else {\n      this.context.selectedId = null;\n      onShapeChange();\n    }\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class DraggingAnnotationState implements IAnnotationState {\n  private context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { shapes } = this.context;\n    const currentShape = shapes[shapes.length - 1];\n    currentShape.onDrag(positionX, positionY);\n  };\n\n  public onMouseUp = () => {\n    const { setAnnotationState } = this.context;\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class TransformationState implements IAnnotationState {\n  private context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { currentTransformer } = this.context;\n    if (currentTransformer) {\n      currentTransformer.onTransformation(positionX, positionY);\n    }\n  };\n\n  public onMouseUp = () => {\n    const { setAnnotationState } = this.context;\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import ReactPictureAnnotation from \"../ReactPictureAnnotation\";\nimport { RectShape } from \"../Shape\";\nimport Transformer from \"../Transformer\";\nimport randomId from \"../utils/randomId\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport CreatingAnnotationState from \"./CreatingAnnotationState\";\nimport DraggingAnnotationState from \"./DraggingAnnotationState\";\nimport TransformationState from \"./TransfromationState\";\n\nexport class DefaultAnnotationState implements IAnnotationState {\n  private context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseMove = () => undefined;\n  public onMouseUp = () => undefined;\n\n  public onMouseLeave = () => undefined;\n\n  public onMouseDown = (positionX: number, positionY: number) => {\n    const {\n      shapes,\n      currentTransformer,\n      onShapeChange,\n      setAnnotationState: setState\n    } = this.context;\n\n    if (\n      currentTransformer &&\n      currentTransformer.checkBoundary(positionX, positionY)\n    ) {\n      currentTransformer.startTransformation(positionX, positionY);\n      setState(new TransformationState(this.context));\n      return;\n    }\n\n    for (let i = shapes.length - 1; i >= 0; i--) {\n      if (shapes[i].checkBoundary(positionX, positionY)) {\n        this.context.selectedId = shapes[i].getAnnotationData().id;\n        this.context.currentTransformer = new Transformer(shapes[i]);\n        const [selectedShape] = shapes.splice(i, 1);\n        shapes.push(selectedShape);\n        selectedShape.onDragStart(positionX, positionY);\n        onShapeChange();\n        setState(new DraggingAnnotationState(this.context));\n        return;\n      }\n    }\n    this.context.shapes.push(\n      new RectShape(\n        {\n          id: randomId(),\n          mark: {\n            x: positionX,\n            y: positionY,\n            width: 0,\n            height: 0,\n            type: \"RECT\"\n          }\n        },\n        onShapeChange\n      )\n    );\n\n    setState(new CreatingAnnotationState(this.context));\n  };\n}\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <svg\n      className=\"rp-delete\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n    >\n      <g data-name=\"Layer 2\">\n        <g data-name=\"trash-2\">\n          <rect width=\"24\" height=\"24\" opacity=\"0\" />\n          <path d=\"M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0zm0-11.67c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM16 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport DeleteButton from \"./DeleteButton\";\n\nexport interface IDefaultInputSection {\n  value: string;\n  onChange: (value: string) => void;\n  onDelete: () => void;\n}\n\nexport default ({ value, onChange, onDelete }: IDefaultInputSection) => {\n  return (\n    <div className=\"rp-default-input-section\">\n      <input\n        className=\"rp-default-input-section_input\"\n        placeholder=\"INPUT TAG HERE\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <a className=\"rp-default-input-section_delete\" onClick={() => onDelete()}>\n        <DeleteButton />\n      </a>\n    </div>\n  );\n};\n","import React, { MouseEventHandler } from \"react\";\nimport { IAnnotation } from \"./Annotation\";\nimport { IAnnotationState } from \"./annotation/AnnotationState\";\nimport { DefaultAnnotationState } from \"./annotation/DefaultAnnotationState\";\nimport DefaultInputSection from \"./DefaultInputSection\";\n// import DeleteButton from \"./DeleteButton\";\nimport { IShape, IShapeBase, RectShape, shapeStyle } from \"./Shape\";\nimport Transformer, { ITransformer } from \"./Transformer\";\n\ninterface IReactPictureAnnotationProps {\n  annotationData?: IAnnotation[];\n  selectedId?: string | null;\n  onChange: (annotationData: IAnnotation[]) => void;\n  onSelect: (id: string | null) => void;\n  width: number;\n  height: number;\n  image: string;\n  enableZoom?: boolean;\n  inputElement: (\n    value: string,\n    onChange: (value: string) => void,\n    onDelete: () => void\n  ) => React.ReactElement;\n}\n\ninterface IStageState {\n  scale: number;\n  originX: number;\n  originY: number;\n}\n\nconst defaultState: IStageState = {\n  scale: 1,\n  originX: 0,\n  originY: 0\n};\n\nexport default class ReactPictureAnnotation extends React.Component<IReactPictureAnnotationProps> {\n  set selectedId(value: string | null) {\n    const { onSelect } = this.props;\n    this.selectedIdTrueValue = value;\n    onSelect(value);\n  }\n\n  get selectedId() {\n    return this.selectedIdTrueValue;\n  }\n  public static defaultProps = {\n    inputElement: (\n      value: string,\n      onChange: (value: string) => void,\n      onDelete: () => void\n    ) => (\n      <DefaultInputSection\n        value={value}\n        onChange={onChange}\n        onDelete={onDelete}\n      />\n    )\n  };\n\n  public shapes: IShape[] = [];\n  public currentTransformer: ITransformer;\n\n  public state = {\n    inputPosition: {\n      left: 0,\n      top: 0\n    },\n    showInput: false,\n    inputComment: \"\"\n  };\n  private currentAnnotationData: IAnnotation[] = [];\n  private selectedIdTrueValue: string | null;\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n  private canvas2D?: CanvasRenderingContext2D | null;\n  private imageCanvasRef = React.createRef<HTMLCanvasElement>();\n  private imageCanvas2D?: CanvasRenderingContext2D | null;\n  private currentImageElement?: HTMLImageElement;\n  private currentAnnotationState: IAnnotationState = new DefaultAnnotationState(\n    this\n  );\n  private scaleState = defaultState;\n\n  public componentDidMount = () => {\n    const currentCanvas = this.canvasRef.current;\n    const currentImageCanvas = this.imageCanvasRef.current;\n    if (currentCanvas && currentImageCanvas) {\n      this.setCanvasDPI();\n\n      this.canvas2D = currentCanvas.getContext(\"2d\");\n      this.imageCanvas2D = currentImageCanvas.getContext(\"2d\");\n      this.onImageChange(this.scaleState);\n    }\n\n    this.syncAnnotationData();\n    this.syncSelectedId();\n  };\n\n  public componentDidUpdate = (preProps: IReactPictureAnnotationProps) => {\n    const { width, height, image, enableZoom } = this.props;\n    if (preProps.width !== width || preProps.height !== height) {\n      this.setCanvasDPI();\n      this.onShapeChange();\n      this.onImageChange(this.scaleState);\n    }\n    if (preProps.image !== image) {\n      this.cleanImage();\n      if (this.currentImageElement) {\n        this.currentImageElement.src = image;\n      } else {\n        this.onImageChange(this.scaleState);\n      }\n    }\n    if(preProps.enableZoom !== enableZoom && !enableZoom)\n      this.onImageChange(defaultState, true);\n\n    this.syncAnnotationData();\n    this.syncSelectedId();\n  };\n\n  public calculateMousePosition = (positionX: number, positionY: number) => {\n    const { originX, originY, scale } = this.scaleState;\n    return {\n      positionX: (positionX - originX) / scale,\n      positionY: (positionY - originY) / scale\n    };\n  };\n\n  public calculateShapePosition = (shapeData: IShapeBase): IShapeBase => {\n    const { originX, originY, scale } = this.scaleState;\n    const { x, y, width, height } = shapeData;\n    return {\n      x: x * scale + originX,\n      y: y * scale + originY,\n      width: width * scale,\n      height: height * scale\n    };\n  };\n\n  public render() {\n    console.log(this)\n    const { width, height, inputElement } = this.props;\n    const { showInput, inputPosition, inputComment } = this.state;\n    return (\n      <div className=\"rp-stage\">\n        <canvas\n          style={{ width, height }}\n          className=\"rp-image\"\n          ref={this.imageCanvasRef}\n          width={width * 2}\n          height={height * 2}\n        />\n        <canvas\n          className=\"rp-shapes\"\n          style={{ width, height }}\n          ref={this.canvasRef}\n          width={width * 2}\n          height={height * 2}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          onMouseUp={this.onMouseUp}\n          onMouseLeave={this.onMouseLeave}\n          onWheel={this.onWheel}\n        />\n        {showInput && (\n          <div className=\"rp-selected-input\" style={inputPosition}>\n            {inputElement(\n              inputComment,\n              this.onInputCommentChange,\n              this.onDelete\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  public setAnnotationState = (annotationState: IAnnotationState) => {\n    this.currentAnnotationState = annotationState;\n  };\n\n  public onShapeChange = () => {\n    if (this.canvas2D && this.canvasRef.current) {\n      this.canvas2D.clearRect(\n        0,\n        0,\n        this.canvasRef.current.width,\n        this.canvasRef.current.height\n      );\n\n      let hasSelectedItem = false;\n\n      for (const item of this.shapes) {\n        const isSelected = item.getAnnotationData().id === this.selectedId;\n        const { x, y, height } = item.paint(\n          this.canvas2D,\n          this.calculateShapePosition,\n          isSelected\n        );\n\n        if (isSelected) {\n          if (!this.currentTransformer) {\n            this.currentTransformer = new Transformer(item);\n          }\n\n          hasSelectedItem = true;\n\n          this.currentTransformer.paint(\n            this.canvas2D,\n            this.calculateShapePosition\n          );\n\n          this.setState({\n            showInput: true,\n            inputPosition: {\n              left: x,\n              top: y + height + shapeStyle.margin\n            },\n            inputComment: item.getAnnotationData().comment || \"\"\n          });\n        }\n      }\n\n      if (!hasSelectedItem) {\n        this.setState({\n          showInput: false,\n          inputComment: \"\"\n        });\n      }\n    }\n\n    this.currentAnnotationData = this.shapes.map(item =>\n      item.getAnnotationData()\n    );\n    const { onChange } = this.props;\n    onChange(this.currentAnnotationData);\n  };\n\n  private syncAnnotationData = () => {\n    const { annotationData } = this.props;\n    if (annotationData) {\n      const refreshShapesWithAnnotationData = () => {\n        this.selectedId = null;\n        const nextShapes = annotationData.map(\n          eachAnnotationData =>\n            new RectShape(eachAnnotationData, this.onShapeChange)\n        );\n        this.shapes = nextShapes;\n        this.onShapeChange();\n      };\n\n      if (annotationData.length !== this.shapes.length) {\n        refreshShapesWithAnnotationData();\n      } else {\n        for (const annotationDataItem of annotationData) {\n          const targetShape = this.shapes.find(\n            item => item.getAnnotationData().id === annotationDataItem.id\n          );\n          if (targetShape && targetShape.equal(annotationDataItem)) {\n            continue;\n          } else {\n            refreshShapesWithAnnotationData();\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  private syncSelectedId = () => {\n    const { selectedId } = this.props;\n\n    if (selectedId && selectedId !== this.selectedId) {\n      this.selectedId = selectedId;\n      this.onShapeChange();\n    }\n  };\n\n  private onDelete = () => {\n    const deleteTarget = this.shapes.findIndex(\n      shape => shape.getAnnotationData().id === this.selectedId\n    );\n    if (deleteTarget >= 0) {\n      this.shapes.splice(deleteTarget, 1);\n      this.onShapeChange();\n    }\n  };\n\n  private setCanvasDPI = () => {\n    const currentCanvas = this.canvasRef.current;\n    const currentImageCanvas = this.imageCanvasRef.current;\n    if (currentCanvas && currentImageCanvas) {\n      const currentCanvas2D = currentCanvas.getContext(\"2d\");\n      const currentImageCanvas2D = currentImageCanvas.getContext(\"2d\");\n      if (currentCanvas2D && currentImageCanvas2D) {\n        currentCanvas2D.scale(2, 2);\n        currentImageCanvas2D.scale(2, 2);\n      }\n    }\n  };\n\n  private onInputCommentChange = (comment: string) => {\n    const selectedShapeIndex = this.shapes.findIndex(\n      item => item.getAnnotationData().id === this.selectedId\n    );\n    this.shapes[selectedShapeIndex].setComment(comment);\n    this.setState({ inputComment: comment });\n  };\n\n  private cleanImage = () => {\n    if (this.imageCanvas2D && this.imageCanvasRef.current) {\n      this.imageCanvas2D.clearRect(\n        0,\n        0,\n        this.imageCanvasRef.current.width,\n        this.imageCanvasRef.current.height\n      );\n    }\n  };\n\n  private onImageChange = (scaleState: IStageState, setDefault?: boolean) => {\n    this.cleanImage();\n    if (this.imageCanvas2D && this.imageCanvasRef.current) {\n      if (this.currentImageElement && !setDefault) {\n        const { originX, originY, scale } = scaleState;\n        this.imageCanvas2D.drawImage(\n          this.currentImageElement,\n          originX,\n          originY,\n          this.currentImageElement.width * scale,\n          this.currentImageElement.height * scale\n        );\n      } else {\n        const nextImageNode = document.createElement(\"img\");\n        nextImageNode.addEventListener(\"load\", () => {\n          this.currentImageElement = nextImageNode;\n          const { width, height } = nextImageNode;\n          const imageNodeRatio = height / width;\n          const { width: canvasWidth, height: canvasHeight } = this.props;\n          const canvasNodeRatio = canvasHeight / canvasWidth;\n          if (!isNaN(imageNodeRatio) && !isNaN(canvasNodeRatio)) {\n            if (imageNodeRatio < canvasNodeRatio) {\n              const scale = canvasWidth / width;\n              this.scaleState = {\n                originX: 0,\n                originY: (canvasHeight - scale * height) / 2,\n                scale\n              };\n            } else {\n              const scale = canvasHeight / height;\n              this.scaleState = {\n                originX: (canvasWidth - scale * width) / 2,\n                originY: 0,\n                scale\n              };\n            }\n          }\n          this.onImageChange(this.scaleState);\n          this.onShapeChange();\n        });\n        nextImageNode.alt = \"\";\n        nextImageNode.src = this.props.image;\n      }\n    }\n  };\n\n  private onMouseDown: MouseEventHandler<HTMLCanvasElement> = event => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { positionX, positionY } = this.calculateMousePosition(\n      offsetX,\n      offsetY\n    );\n    this.currentAnnotationState.onMouseDown(positionX, positionY);\n  };\n\n  private onMouseMove: MouseEventHandler<HTMLCanvasElement> = event => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { positionX, positionY } = this.calculateMousePosition(\n      offsetX,\n      offsetY\n    );\n    this.currentAnnotationState.onMouseMove(positionX, positionY);\n  };\n\n  private onMouseUp: MouseEventHandler<HTMLCanvasElement> = () => {\n    this.currentAnnotationState.onMouseUp();\n  };\n\n  private onMouseLeave: MouseEventHandler<HTMLCanvasElement> = () => {\n    this.currentAnnotationState.onMouseLeave();\n  };\n\n  private onWheel = (event: React.WheelEvent<HTMLCanvasElement>) => {\n    if(this.props.enableZoom){\n      event.stopPropagation();\n      // https://stackoverflow.com/a/31133823/9071503\n      const { clientHeight, scrollTop, scrollHeight } = event.currentTarget;\n      if (clientHeight + scrollTop + event.deltaY > scrollHeight) {\n        // event.preventDefault();\n        event.currentTarget.scrollTop = scrollHeight;\n      } else if (scrollTop + event.deltaY < 0) {\n        // event.preventDefault();\n        event.currentTarget.scrollTop = 0;\n      }\n\n      const { scale: preScale } = this.scaleState;\n      this.scaleState.scale += event.deltaY * 0.005;\n      if (this.scaleState.scale > 10) {\n        this.scaleState.scale = 10;\n      }\n      if (this.scaleState.scale < 0.1) {\n        this.scaleState.scale = 0.1;\n      }\n\n      const { originX, originY, scale } = this.scaleState;\n      const { offsetX, offsetY } = event.nativeEvent;\n      this.scaleState.originX =\n          offsetX - ((offsetX - originX) / preScale) * scale;\n      this.scaleState.originY =\n          offsetY - ((offsetY - originY) / preScale) * scale;\n\n      this.setState({ imageScale: this.scaleState });\n\n      requestAnimationFrame(() => {\n        this.onShapeChange();\n        this.onImageChange(this.scaleState);\n      });\n    }\n  };\n}\n"],"names":["shapeStyle","padding","margin","fontSize","fontColor","fontBackground","fontFamily","shapeBackground","shapeStrokeStyle","shapeShadowStyle","RectShape","data","onChange","positionX","positionY","annotationData","mark","x","y","dragStartOffset","offsetX","offsetY","onChangeCallBack","width","height","canvas2D","calculateTruePosition","selected","save","shadowBlur","shadowColor","strokeStyle","lineWidth","strokeRect","restore","fillStyle","fillRect","comment","id","NODE_WIDTH","Transformer","shape","currentCenterIndex","getCenterIndexByCursor","currentNodeCenterIndex","currentCentersTable","getAllCentersTable","adjust","allCentersTable","item","findIndex","checkEachRectBoundary","rectCenterX","rectCenterY","Math","abs","getAnnotationData","adjustMark","_","len","chars","maxPos","length","i","charAt","floor","random","CreatingAnnotationState","context","undefined","shapes","currentShape","onShapeChange","setAnnotationState","pop","push","selectedId","DefaultAnnotationState","onMouseUp","DraggingAnnotationState","onDrag","TransformationState","currentTransformer","onTransformation","setState","checkBoundary","startTransformation","splice","selectedShape","onDragStart","randomId","type","value","onDelete","e","target","defaultState","scale","originX","originY","ReactPictureAnnotation","inputPosition","left","top","showInput","inputComment","React","createRef","currentCanvas","canvasRef","current","currentImageCanvas","imageCanvasRef","setCanvasDPI","getContext","imageCanvas2D","onImageChange","scaleState","syncAnnotationData","syncSelectedId","preProps","props","image","enableZoom","cleanImage","currentImageElement","src","shapeData","annotationState","currentAnnotationState","clearRect","hasSelectedItem","isSelected","paint","calculateShapePosition","currentAnnotationData","map","refreshShapesWithAnnotationData","nextShapes","eachAnnotationData","annotationDataItem","targetShape","find","equal","deleteTarget","currentCanvas2D","currentImageCanvas2D","selectedShapeIndex","setComment","setDefault","drawImage","nextImageNode","document","createElement","addEventListener","imageNodeRatio","canvasWidth","canvasHeight","canvasNodeRatio","isNaN","alt","event","nativeEvent","calculateMousePosition","onMouseDown","onMouseMove","onMouseLeave","stopPropagation","currentTarget","clientHeight","scrollTop","scrollHeight","deltaY","preScale","imageScale","requestAnimationFrame","selectedIdTrueValue","onSelect","console","log","inputElement","state","onWheel","onInputCommentChange","Component"],"mappings":"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"}